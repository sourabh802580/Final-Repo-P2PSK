@{
    ViewBag.Title = "ShowApprovePR";
}

<div class="main-content d-flex justify-content-center " style="min-height:auto;">
    <div class="shadow-sm rounded bg-white p-3" style="width:1200px; ">
        <div class="main-content">

            <!-- Nav Pills -->
            <ul class="nav nav-pills mb-3">
                <li class="nav-item me-2">
                    <a href="/Purchase/ShowPendingPRPRK" class="nav-link">
                        <i class="bi bi-hourglass-split"></i> Pending Purchase Requisition
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/Purchase/ShowApprovePRPRK" class="nav-link active">
                        <i class="bi bi-check2-circle"></i> Approved Purchase Requisition
                    </a>
                </li>
            </ul>

            <!-- Header -->
            <div class="text-center mb-3">
                <h2 class="text-primary fw-bold">Approved Purchase Requisition</h2>
            </div>

            <!-- Date Range Picker -->
            <div class="mb-3">
                <div class="input-group" style="max-width: 280px;">
                    <span class="input-group-text bg-primary text-white">
                        <i class="bi bi-calendar-date"></i>
                    </span>
                    <input type="text" id="PRdatepicker" class="form-control" placeholder="Select date range" readonly />
                </div>
            </div>

            <!-- Table -->
            <div class="table-responsive shadow-sm rounded">
                <table id="approvedPRTable" class="table table-striped table-hover table-bordered align-middle">
                    <thead class="table-dark">
                        <tr class="text-center">
                            <th><input type="checkbox" id="selectAll" data-bs-toggle="tooltip" title="Select All Rows" /></th>
                            <th>Sr No</th>
                            <th>PR Code</th>
                            <th>Added Date</th>
                            <th>Approved Date</th>
                            <th>Priority</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody class="text-center"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="prModal" tabindex="-1">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white justify-content-center">
                <h5 class="modal-title fw-bold mb-0 text-white">Approved Purchase Requisition Items</h5>
                <button type="button" class="btn-close btn-close-white position-absolute end-0 me-3" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="prModalBody"></div>
        </div>
    </div>
</div>

<style>
    .modal-backdrop {
        display: none;
    }

    .container-fluid {
        max-width: 1200px !important;
        margin-left: auto;
        margin-right: auto;
        
        
    }

    body.modal-open .main-content {
        position: relative;
    }

        body.modal-open .main-content::after {
            content: '';
            position: fixed;
            inset: 0;
            background-color: rgba(0,0,0,0.5);
            z-index: 1040;
            pointer-events: none;
        }

    .modal {
        z-index: 1055 !important;
    }

    #approvedPRTable thead th,
    #approvedPRTable tbody td {
        text-align: center !important;
        vertical-align: middle;
    }

    .btnAction {
        width: 35px;
        height: 35px;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        padding: 0;
    }

    .dt-toolbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 10px;
    }

    .dt-left {
        display: flex;
        align-items: center;
        gap: 10px;
        flex-wrap: wrap;
    }

    .dataTables_paginate {
        float: right !important;
    }
</style>

<script>
    $(document).ready(function () {

        function showToast(message, type = "info") {
            toastr.options = { "closeButton": true, "progressBar": true, "positionClass": "toast-top-right", "showDuration": "300", "hideDuration": "1000", "timeOut": "3000" };
            switch (type.toLowerCase()) {
                case "success": toastr.success(message); break;
                case "danger": toastr.error(message); break;
                case "warning": toastr.warning(message); break;
                default: toastr.info(message); break;
            }
        }

        let table;
        function exportColumns(idx) { return idx !== 0 && idx !== 6; }

        function loadApprovedPR() {
            table = $('#approvedPRTable').DataTable({
                dom: '<"dt-toolbar"<"dt-left"B><"dt-search"f>>rt<"bottom d-flex justify-content-between align-items-center"ip>',
                ordering: false,
                processing: true,
                serverSide: false,
                ajax: { url: '/Purchase/ShowApprovPRK', dataSrc: '' },
                columns: [
                    { data: null, orderable: false, className: 'text-center', render: (d, t, r) => `<input type="checkbox" class="row-select" value="${r.PRCode}" data-bs-toggle="tooltip" title="Select Row"/>` },
                    { data: null, orderable: false, className: 'text-center', render: (d, t, r, meta) => meta.row + 1 },
                    { data: 'PRCode', className: 'text-center' },
                    { data: 'AddedDate', className: 'text-center', render: d => d ? moment(d).format('DD/MM/YYYY') : '', type: 'date', defaultContent: '' },
                    { data: 'ApprovedRejectedDate', className: 'text-center', render: d => d ? moment(d).format('DD/MM/YYYY') : '', type: 'date', defaultContent: '' },
                    {
                        data: 'Priority', defaultContent: '', render: function (data) {
                            if (!data) return '';
                            let badgeClass = '';
                            switch (data.toLowerCase()) {
                                case 'cold': badgeClass = 'badge bg-success'; break;
                                case 'warm': badgeClass = 'badge bg-warning'; break;
                                case 'hot': badgeClass = 'badge bg-danger'; break;
                                default: badgeClass = 'badge bg-secondary';
                            }
                            return `<span class="${badgeClass}">${data}</span>`;
                        }
                    },
                    { data: 'PRCode', orderable: false, className: 'text-center', render: d => `<button class="btn btn-sm btn-primary btnAction" data-id="${d}" data-bs-toggle="tooltip" title="View Details"><i class="bi bi-eye-fill"></i></button>` }
                ],
                buttons: [
                    // ✅ Print Approved Purchase Requisition
                    {
                        extend: 'print',
                        title: 'Approve PR List', // Prevents showing "null" or default title
                        text: '<i class="bi bi-printer-fill text-dark fs-5" data-bs-toggle="tooltip" title="Print Selected Rows"></i>',
                        titleAttr: 'Print',

                        action: function (e, dt, button, config) {
                            if ($('.row-select:checked').length === 0) {
                                showToast("Please select at least one row to Print", "warning");
                                return;
                            }
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, button, config);
                        },

                        exportOptions: {
                            columns: exportColumns,
                            rows: function (idx, data, node) {
                                return $(node).find('.row-select').prop('checked');
                            }
                        },

                        customize: function (win) {
                            // ✅ Format date as DD/MM/YYYY
                            const today = new Date();
                            const generatedDate = today.toLocaleDateString('en-GB');

                            // ❌ Remove default DataTables title
                            $(win.document.body).find('h1').remove();

                            // ✅ Add custom header
                            $(win.document.body).prepend(`
            <div style="text-align:center; margin-bottom:10px;">
                <h2 style="margin:0;">Approved Purchase Requisition</h2>
                <div style="font-size:12px;">Generated on: ${generatedDate}</div>
            </div>
        `);

                            // ✅ Style the table
                            const $table = $(win.document.body).find('table');
                            $table.addClass('table table-bordered table-striped').css({
                                'font-size': '14px',
                                'width': '100%',
                                'border-collapse': 'collapse',
                                'margin-top': '20px'
                            });

                            // ✅ Style header
                            $table.find('thead th').css({
                                'background-color': '#000000',
                                'color': '#ffffff',
                                'text-align': 'center'
                            });

                            // ✅ Center table body cells
                            $table.find('tbody td').css('text-align', 'center');

                            // ✅ Add correct serial numbers
                            $table.find('tbody tr').each(function (i) {
                                $(this).find('td:first').text(i + 1);
                            });
                        }
                    },


                    // ✅ PDF
                    {
                        extend: 'pdfHtml5',
                        title: 'Approved Purchase Requisition',
                        text: '<i class="bi bi-file-earmark-pdf text-danger fs-5" data-bs-toggle="tooltip" title="Export to PDF"></i>',
                        titleAttr: 'Export PDF',
                        action: function (e, dt, button, config) {
                            if ($('.row-select:checked').length === 0) {
                                showToast("Please select at least one row to export PDF", "warning");
                                return;
                            }
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, button, config);
                        },
                        exportOptions: {
                            columns: exportColumns,
                            rows: function (idx, data, node) {
                                return $(node).find('.row-select').prop('checked');
                            },
                            format: {
                                body: function (data, rowIdx, colIdx) {
                                    if (colIdx === 3 || colIdx === 6) return moment(data).format('DD/MM/YYYY');
                                    if (colIdx === 0) return rowIdx + 1;
                                    if (typeof data === 'string') return data.replace(/<\/?[^>]+(>|$)/g, "").trim();
                                    return data;
                                }
                            }
                        },
                        customize: function (doc) {
                            try {
                                doc.content[0].alignment = 'center';
                                doc.content[0].fontSize = 14;
                                var exportDate = new Date().toLocaleDateString('en-GB');
                                doc.content.splice(1, 0, {
                                    text: 'Export Date: ' + exportDate,
                                    alignment: 'center',
                                    margin: [0, 0, 0, 8],
                                    fontSize: 10
                                });

                                var tableNode = doc.content.find(c => c.table);
                                if (!tableNode) return;

                                doc.styles = doc.styles || {};
                                doc.styles.tableHeader = {
                                    alignment: 'center',
                                    fillColor: '#212529',
                                    color: '#ffffff',
                                    bold: true
                                };
                                doc.styles.tableBodyEven = { alignment: 'center' };
                                doc.styles.tableBodyOdd = { alignment: 'center' };
                                tableNode.layout = {
                                    hLineWidth: () => .5,
                                    vLineWidth: () => .5,
                                    hLineColor: () => '#dddddd',
                                    vLineColor: () => '#dddddd',
                                    paddingLeft: () => 30,
                                    paddingRight: () => 30,
                                    paddingTop: () => 4,
                                    paddingBottom: () => 4
                                };

                                tableNode.table.body.forEach((row, i) => {
                                    if (i > 0) row[0] = { text: String(i), alignment: 'center' };
                                });
                            } catch (err) {
                                console.error('PDF customize error:', err);
                            }
                        }
                    },

                    // ✅ Excel
                    {
                        extend: 'excelHtml5',
                        title: 'Approved Purchase Requisition',
                        text: '<i class="bi bi-file-earmark-excel text-success fs-5" data-bs-toggle="tooltip" title="Export to Excel"></i>',
                        titleAttr: 'Export Excel',
                        action: function (e, dt, button, config) {
                            if ($('.row-select:checked').length === 0) {
                                showToast("Please select at least one row to export Excel", "warning");
                                return;
                            }
                            window.__excelSrCounter = 0;
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);
                        },
                        exportOptions: {
                            columns: exportColumns,
                            rows: function (idx, data, node) {
                                return $(node).find('.row-select').prop('checked');
                            },
                            format: {
                                body: function (data, rowIdx, colIdx) {
                                    if (colIdx === 1) return ++window.__excelSrCounter;
                                    if (colIdx === 3 || colIdx === 4) return moment(data).format('DD/MM/YYYY');
                                    if (typeof data === 'string') return data.replace(/<\/?[^>]+(>|$)/g, "").trim();
                                    return data;
                                }
                            }
                        }
                    },

                    // ✅ CSV
                    {
                        extend: 'csvHtml5',
                        title: 'Approved_Purchase_Requisition',
                        text: '<i class="bi bi-filetype-csv text-primary fs-5" data-bs-toggle="tooltip" title="Export to CSV"></i>',
                        titleAttr: 'Export CSV',
                        action: function (e, dt, button, config) {
                            if ($('.row-select:checked').length === 0) {
                                showToast("Please select at least one row to export CSV", "warning");
                                return;
                            }
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, button, config);
                        },
                        exportOptions: {
                            columns: exportColumns,
                            rows: function (idx, data, node) {
                                return $(node).find('.row-select').prop('checked');
                            },
                            format: {
                                body: function (data, rowIdx, colIdx) {
                                    if (colIdx === 0) return rowIdx + 1;
                                    if (colIdx === 3 || colIdx === 4) return moment(data).format('DD/MM/YYYY');
                                    if (typeof data === 'string') return data.replace(/<\/?[^>]+(>|$)/g, "").trim();
                                    return data;
                                }
                            }
                        }
                    }
                ],

                initComplete: function () { $('#approvedPRTable_filter input').addClass("form-control").attr("placeholder", "Search...").css("height", "40px"); }
            });
        }

        loadApprovedPR();

        // Select All
        $(document).on("change", "#selectAll", () => $(".row-select").prop("checked", $("#selectAll").prop("checked")));
        $(document).on("change", ".row-select", () => $("#selectAll").prop("checked", $(".row-select:checked").length === $(".row-select").length));

        // Modal
        $(document).on("click", ".btnAction", function () {
            let prCode = $(this).data("id");
            $("#prModalBody").html("<div class='text-center p-3'>Loading...</div>");
            $.get("/Purchase/ShowApporvePRItemPRK", { prCode })
                .done(html => { $("#prModalBody").html(html); new bootstrap.Modal(document.getElementById("prModal")).show(); })
                .fail(() => showToast("Error loading requisition items", "danger"));
        });

        // Tooltips
        $('[data-bs-toggle="tooltip"]').tooltip();
        $('#approvedPRTable').on('draw.dt', () => { $('[data-bs-toggle="tooltip"]').tooltip(); });

        // Date Range Picker
        $(document).on('focus', '#PRdatepicker', function () {
            if (!$(this).data('daterangepicker')) {
                $(this).daterangepicker({
                    autoUpdateInput: false,
                    opens: "center", drops: "down", alwaysShowCalendars: false,
                    locale: { cancelLabel: 'Clear', applyLabel: 'Apply' },
                    ranges: {
                        'Today': [moment(), moment()],
                        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                        'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                        'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                    }
                }, function (start, end) {
                    $('#PRdatepicker').val(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'));
                    $.fn.dataTable.ext.search.push(function (settings, data) {
                        if (settings.nTable.id !== 'approvedPRTable') return true;
                        const addedDate = moment(data[3], 'DD/MM/YYYY');
                        return addedDate.isBetween(start, end, undefined, '[]');
                    });
                    table.draw();
                    $.fn.dataTable.ext.search.pop();
                });
                $('#PRdatepicker').on('cancel.daterangepicker', () => { $(this).val(''); table.draw(); });
            }
        });

    });
</script>
