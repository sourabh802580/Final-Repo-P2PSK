@model P2PLibray.Purchase.Purchase

<!-- ===================== Main Container ===================== -->
<div class="container mt-4">
    <div class="table-responsive">
        <h3 class="text-center fw-bold text-primary">Approved Purchase Requisition</h3>


        <!-- Date Filters -->
        <div class="mb-3 d-flex gap-2">
            <div class="input-group" style="max-width: 280px;">
                <span class="input-group-text bg-primary text-white">
                    <i class="bi bi-calendar-date"></i> <!-- Calendar Icon -->
                </span>
                <input type="text" id="Rejectedrange3" placeholder="Select date Range" class="form-control" readonly />
            </div>
        </div>

        <!-- 📋 Approve PR DataTable -->
        <table id="TableApproved" class="table table-striped TableApproved table-bordered text-center" style="width:100%">
            <thead class="table-dark">
                <tr>
                    <th><input type="checkbox" id="selectAll3" /></th><!-- Select All -->
                    <th>SR NO</th>
                    <th>PR CODE</th>
                    <th>ADDED DATE</th>
                    <th>APPROVE/REJECTED BY</th>
                    <th>APPROVE/REJECTED DATE</th>
                    <th>PRIORITY</th>
                    <th>STATUS</th>
                    <th>ACTION</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<!-- ===================== View Modal ===================== -->
<div class="modal fade" id="ApprovedModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header bg-primary text-white d-flex justify-content-center position-relative p-0">
                <h4 class="modal-title m-0 fw-bold text-white flex-grow-1 text-center py-3">Purchase Requisition Details</h4>
                <button type="button" class="btn-close btn-close-white position-absolute end-0 top-0 m-0 p-3 h-100"
                        data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <div class="container mt-3">

                    <!-- Combined Card -->
                    <div class="card shadow-sm mb-4">
                        <h4 class="text-center fw-bold mb-3 text-primary">Requisition Details</h4>


                        <div class="card-body p-3">

                            <!-- Requisition Info Section -->
                            <div class="container mb-4 fw-bold fs-5">

                                <div class="row text-center mb-3">
                                    <div class="col">
                                        <label class="form-label fw-bold fs-5 me-2 mb-0">PR CODE :</label>
                                        <div id="PRCODE3" class="fw-semibold text-primary"></div>
                                    </div>
                                    <div class="col">
                                        <label class="form-label fw-bold fs-5 me-2 mb-0">Required Date :</label>
                                        <div id="RequiredDate3" class="fw-semibold text-success"></div>
                                    </div>
                                </div>

                                <div class="row text-center">
                                    <div class="col">
                                        <label class="form-label fw-bold fs-5 me-2 mb-0">Created By :</label>
                                        <div id="FullName3" class="fw-semibold text-dark"></div>
                                    </div>
                                    <div class="col">
                                        <label class="form-label fw-bold fs-5 me-2 mb-0">Status :</label>
                                        <div id="Status3" class="fw-semibold"></div>
                                    </div>
                                </div>

                            </div>


                            <!-- Divider -->
                            <hr class="my-3">

                            <!-- Item Details Section -->
                            <div>
                                <h4 class="text-center fw-bold mb-3 text-primary">Item Details</h4>
                                <div class="table-responsive">
                                    <table id="ViewItems3" class="table table-bordered table-hover align-middle text-center mb-0">
                                        <thead class="table-dark text-black">
                                            <tr>
                                                <th class="border-top-0">SR NO</th>
                                                <th class="border-top-0">ITEM CODE</th>
                                                <th class="border-top-0">ITEM NAME</th>
                                                <th class="border-top-0">DESCRIPTION</th>
                                                <th class="border-top-0">QTY</th>
                                                <th class="border-top-0">UNIT RATE</th>
                                                <th class="border-top-0">AMOUNT</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- ===================== Update Modal ===================== -->
<div class="modal fade" id="updateapproeModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white d-flex justify-content-center position-relative p-0">
                <h4 class="modal-title m-0 text-white fw-bold flex-grow-1 text-center py-3">Update Purchase Requisition</h4>
                <button type="button" class="btn-close btn-close-white position-absolute end-0 top-0 m-0 p-3 h-100"
                        data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Requisition Info -->
                <div class="card shadow-sm mb-4">
                    <div class="text-black text-center fw-bold">
                        <h4>Requisition Info</h4>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover align-middle text-center mb-0">
                            <thead class="table-dark">
                                <tr class="bg-black text-white text-center fw-bold">
                                    <th class="border-top-0">PR CODE</th>
                                    <th class="border-top-0">Required Date</th>
                                    <th class="border-top-0">Created By</th>
                                </tr>
                            </thead>
                            <tbody id="PRInfoBodyUpdate">
                                <tr>
                                    <td id="PRCODEUpdate3"></td>
                                    <td id="RequiredDateUpdate3"></td>
                                    <td id="FullNameUpdate3"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Item Details (Editable) -->
                <div class="card shadow-sm mb-4">
                    <div class="text-black text-center fw-bold">
                        <h4>Item Details</h4>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover align-middle text-center mb-0">
                            <thead class="table-dark text-white">
                                <tr>
                                    <th class="border-top-0">SR NO</th>
                                    <th class="border-top-0">ITEM CODE</th>
                                    <th class="border-top-0">ITEM NAME</th>
                                    <th class="border-top-0">DESCRIPTION</th>
                                    <th class="border-top-0">QTY</th>
                                    <th class="border-top-0">UNIT RATE</th>
                                    <th class="border-top-0">AMOUNT</th>
                                    <th class="border-top-0">ACTION</th>

                                </tr>
                            </thead>
                            <tbody id="ItemTableBodyUpdate3">
                                <!-- Dynamic rows will be appended here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<!-- ===================== Script Section ===================== -->
<script>
    $(document).ready(function () {


        toastr.options = {
            closeButton: true,
            progressBar: true,
            newestOnTop: true,
            positionClass: "toast-top-right",
            preventDuplicates: true,
            timeOut: 3000,
            extendedTimeOut: 1000,
            showDuration: 300,
            hideDuration: 300,
            showMethod: "slideDown",
            hideMethod: "fadeOut"
        };

        console.log("Initializing DataTable");

        var selectedRowsApproved = [];

        // Initialize DataTable for Approve PR
        var tableApproved = $('#TableApproved').DataTable({
            responsive: true,
            ajax: {
                url: '/Purchase/GetApprovePRSP',
                type: "GET",
                dataSrc: function (json) {
                    console.log("Data loaded:", json);
                    return json;
                },
                error: function (xhr, error, thrown) {
                    console.error("AJAX error:", error, thrown, xhr.responseText);
                }
            },
            columns: [
                {  // Checkbox for selection
                    data: null,
                    orderable: false,
                    render: function (data, type, row) {
                        return `<input type="checkbox" class="row-select3" data-id="${row.PRCode}">`;
                    }
                },
                { // Serial Number
                    data: null,
                    title: "SR NO",
                    className: 'no-export',
                    orderable: false,
                    render: function (data, type, row, meta) {
                        return meta.row + 1;
                    }
                },
                { data: "PRCode", title: "PR Code" },
                {  //  Format Added Date
                    data: "AddedDate",
                    title: "Added Date",
                    render: function (data) {
                        if (!data) return "-";
                        var match = /\/Date\((\d+)\)\//.exec(data);
                        if (match) {
                            var date = new Date(parseInt(match[1]));
                            return moment(date).format("DD/MM/YYYY");
                        }
                        return "-";
                    }
                },
                {   // Format Approve Date
                    data: "ApproveRejectedBy",
                    title: "Approve/Reject By",
                    render: function (data) {
                        return data ? data : "-";
                    }
                },
                {   // Format Reject Date
                    data: "ApproveRejectedDate",
                    title: "Approve/Reject Date",
                    render: function (data) {
                        if (!data) return "-";
                        var match = /\/Date\((\d+)\)\//.exec(data);
                        if (match) {
                            var date = new Date(parseInt(match[1]));
                            return moment(date).format("DD/MM/YYYY");
                        }
                        return "-";
                    }
                },
                {   //  Priority Badges
                    data: "Priority",
                    title: "Priority",
                    render: function (data) {
                        if (data === "Hot") return '<span class="badge bg-danger">Hot</span>';
                        if (data === "Warm") return '<span class="badge bg-warning">Warm</span>';
                        if (data === "Cold") return '<span class="badge bg-success">Cold</span>';
                        return '<span class="badge bg-secondary">Unknown</span>';
                    }
                },
                {  //  Status Badges
                    data: "Status",
                    title: "Status",
                    render: function (data) {
                        if (data === "Pending") return '<span class="badge bg-warning">Pending</span>';
                        if (data === "Rejected") return '<span class="badge bg-danger">Rejected</span>';
                        return '<span class="badge bg-success">' + data + '</span>';
                    }
                },
                {   // Action Buttons
                    data: null,
                    title: "Action",
                    className: 'no-export',
                    orderable: false,
                    render: function (data, type, row) {
                        if (row.Status === "Pending") {
                            // Show both Update and View buttons
                            return `
<button class="btn btn-sm btn-warning update-btn3"
        data-id="${row.PRCode}"
        data-bs-toggle="modal"
        data-bs-target="#updateapproeModal"
        title="Update PR">
    <i class="bi bi-pencil"></i>
</button>
<button class="btn btn-sm btn-primary view-btn3"
        data-id="${row.PRCode}"
        data-bs-toggle="modal"
        data-bs-target="#ApprovedModal"
        title="View PR">
    <i class="bi bi-eye"></i>
</button>`;
                        } else if (row.Status === "Approved" || row.Status === "Rejected") {
                            // Show only View button
                            return `
<button class="btn btn-sm btn-primary view-btn3"
        data-id="${row.PRCode}"
        data-bs-toggle="modal"
        data-bs-target="#ApprovedModal"
        title="View PR">
    <i class="bi bi-eye"></i>
</button>`;
                        } else {
                            return ''; // Optional: no buttons for other statuses
                        }
                    }
                }
            ],
            ordering: false,
            dom: '<"d-flex justify-content-between align-items-center mb-2"Bf>rt<"d-flex justify-content-between align-items-center mt-2"ip>',
            buttons: [
                {
                    extend: 'print',
                    text: '<i class="bi bi-printer-fill text-dark fs-5"></i>',
                    title: 'PR Report',
                    exportOptions: {
                        rows: function (idx, data, node) {
                            return selectedRowsApproved.includes(data.PRCode);
                        },
                        columns: function (idx, data, node) {
                            return !$(node).hasClass('no-export') && idx !== $('#TableApproved thead th').length - 1;
                        }
                    },
                    action: function (e, dt, button, config) {
                        if (!selectedRowsApproved || selectedRowsApproved.length === 0) {
                            toastr.warning(" Please select at least one PR before exporting!");
                            return; ViewItems2
                        }
                        $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, button, config);
                    },
                    customize: function (win) {
                        $(win.document.body).css('font-size', '12pt');
                        let table = $(win.document.body).find('table');

                        $(win.document.body).find('h1').css('text-align', 'center');

                        let headerRow = table.find('thead tr');
                        headerRow.prepend('<th style="text-align:center">SR NO</th>');

                        table.find('tbody tr').each(function (i) {
                            $(this).prepend('<td style="text-align:center">' + (i + 1) + '</td>');
                        });

                        table.addClass('display').css('font-size', 'inherit');
                    }
                },



                {
                    extend: 'pdfHtml5',
                    text: '<i class="bi bi-file-earmark-pdf text-danger fs-5"></i>',
                    title: 'PR Report',
                    exportOptions: {
                        // Exclude columns with class 'no-export' AND last column
                        columns: function (idx, data, node) {
                            return !$(node).hasClass('no-export') && idx !== $('#TableApproved thead th').length - 1;
                        },
                        rows: function (idx, data, node) {
                            return selectedRowsApproved.includes(data.PRCode); // Only selected rows
                        }
                    },
                    action: function (e, dt, button, config) {
                        if (!selectedRowsApproved || selectedRowsApproved.length === 0) {
                            toastr.warning(" Please select at least one PR before exporting!")
                            return; // Stop PDF export
                        }
                        $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, button, config);
                    },
                    customize: function (doc) {
                        // Title style
                        doc.styles.title = {
                            fontSize: 16,
                            bold: true,
                            alignment: 'center',
                            margin: [0, 0, 0, 12]
                        };
                        doc.content.splice(1, 0, {
                            text: 'Generated on: ' + moment().format("YYYY-MM-DD"),
                            alignment: 'center',
                            margin: [0, 0, 0, 12],
                            fontSize: 11,
                            italics: true
                        });

                        // Find the table node
                        var tableNode = doc.content.find(n => n.table);
                        if (tableNode) {
                            // Add SR NO column at start
                            tableNode.table.body[0].unshift({
                                text: 'SR NO',
                                color: 'white',
                                fillColor: '#343a40',
                                alignment: 'center',
                                bold: true,
                                fontSize: 11
                            });

                            // Make all header cells white
                            tableNode.table.body[0].forEach(cell => {
                                cell.color = 'white';
                                cell.fillColor = '#343a40';
                                cell.bold = true;
                                cell.alignment = 'center';
                                cell.fontSize = 11;
                            });

                            // Add SR NO values and style body rows
                            let srNo = 1;
                            tableNode.table.body.slice(1).forEach(row => {
                                row.unshift({
                                    text: srNo.toString(),
                                    alignment: 'center',
                                    fontSize: 10
                                });
                                srNo++;

                                row.forEach(cell => {
                                    cell.fontSize = 10;
                                    cell.alignment = 'center';
                                    cell.margin = [4, 3, 4, 3];
                                });
                            });

                            // Adjust column widths including SR NO
                            tableNode.table.widths = ['8%', '12%', '15%', '15%', '15%', '10%', '15%', '10%'];

                            // Table borders
                            tableNode.layout = {
                                fillColor: function (rowIndex) { return rowIndex === 0 ? '#343a40' : null; },
                                hLineColor: () => '#ccc',
                                vLineColor: () => '#ccc',
                                hLineWidth: () => 0.5,
                                vLineWidth: () => 0.5
                            };
                        }

                        // Page margins
                        doc.pageMargins = [40, 60, 40, 40];
                    }
                },
                {
                    extend: 'excelHtml5',
                    text: '<i class="bi bi-file-earmark-excel text-success fs-5"></i>',
                    title: 'PR Report',
                    exportOptions: {
                        // Export only selected rows
                        rows: function (idx, data, node) {
                            return selectedRowsApproved.includes(data.PRCode);
                        },
                        // Exclude columns with class 'no-export' AND last column
                        columns: function (idx, data, node) {
                            return !$(node).hasClass('no-export') && idx !== $('#TableApproved thead th').length - 1;
                        }
                    },
                    action: function (e, dt, button, config) {
                        if (!selectedRowsApproved || selectedRowsApproved.length === 0) {
                            toastr.warning("Please select at least one PR before exporting!")
                            return; // Stop Excel export
                        }
                        $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);
                    },
                    customize: function (xlsx) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];

                        // Optional: You can style the header row
                        $('row c[r^="A1"]', sheet).attr('s', '2'); // Example: style first cell
                    }
                },
                {
                    extend: 'csvHtml5',
                    text: '<i class="bi bi-filetype-csv text-success fs-5"></i>',
                    title: 'PR Report',
                    exportOptions: {
                        // Export only selected rows
                        rows: function (idx, data, node) {
                            return selectedRowsApproved.includes(data.PRCode);
                        },
                        // Exclude columns with class 'no-export' and last column
                        columns: function (idx, data, node) {
                            return !$(node).hasClass('no-export') && idx !== $('#TableApproved thead th').length - 1;
                        }
                    },
                    action: function (e, dt, button, config) {
                        if (!selectedRowsApproved || selectedRowsApproved.length === 0) {
                            toastr.warning("Please select at least one PR before exporting!")
                            return; // Stop CSV export
                        }
                        $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, button, config);
                    }
                }

            ]
        });




        // Initialize Date Range Picker
        var tableStartDate = null;
        var tableEndDate = null;

        var table = $('#TableApproved').DataTable();

        // Initialize Date Range Picker
        $('#Rejectedrange3').daterangepicker({
            autoUpdateInput: false,
            locale: {
                format: 'DD/MM/YYYY',
                cancelLabel: 'Clear'
            },
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        });

        // Apply filter on selection
        $('#Rejectedrange3').on('apply.daterangepicker', function (ev, picker) {
            tableStartDate = picker.startDate;
            tableEndDate = picker.endDate;

            $(this).val(tableStartDate.format('DD/MM/YYYY') + ' - ' + tableEndDate.format('DD/MM/YYYY'));

            // Remove existing date filter first
            $.fn.dataTable.ext.search = $.fn.dataTable.ext.search.filter(function (fn) {
                return !fn.name || fn.name !== 'dateRangeFilter';
            });

            // Push new filter
            $.fn.dataTable.ext.search.push(function dateRangeFilter(settings, data, dataIndex) {
                if (!tableStartDate || !tableEndDate) return true;
                var date = moment(data[3], 'DD/MM/YYYY'); // 6th column (index 5)
                if (!date.isValid()) return true;
                return date.isBetween(tableStartDate, tableEndDate, 'day', '[]');
            });

            table.draw(); // Use your DataTable instance
        });

        // Reset filter on cancel
        $('#Rejectedrange3').on('cancel.daterangepicker', function (ev, picker) {
            tableStartDate = null;
            tableEndDate = null;
            $(this).val('');

            // Remove date filter
            $.fn.dataTable.ext.search = $.fn.dataTable.ext.search.filter(function (fn) {
                return !fn.name || fn.name !== 'dateRangeFilter';
            });

            table.draw();
        });


        // Row Selection
        $('#TableApproved').on('change', '.row-select3', function () {
            let id = $(this).data('id');
            if (this.checked) {
                if (!selectedRowsApproved.includes(id)) {
                    selectedRowsApproved.push(id);
                }
            } else {
                selectedRowsApproved = selectedRowsApproved.filter(x => x !== id);
            }
        });

        // Select All Checkbox
        $('#selectAll3').on('click', function () {
            var checked = this.checked;
            $('.row-select3').each(function () {
                $(this).prop('checked', checked).trigger('change');
            });
        });
    });

    // ===================== View Modal Loader =====================
    $(document).on("click", ".view-btn3", function () {
        var prCode = $(this).data("id");

        // First Ajax: Load Requisition Info
        $.ajax({
            url: '/Purchase/DetailsPartialSP',
            type: 'POST',
            data: { id: prCode },
            success: function (response) {
                if (response.success) {
                    var formattedDate = moment(response.data.RequiredDate).format("DD/MM/YYYY");

                    $("#PRCODE3").text(response.data.PRCode);
                    $("#RequiredDate3").text(formattedDate);
                    $("#FullName3").text(response.data.FullName);
                    $("#Status3").text(response.data.Status);

                    let statusText = response.data.Status;
                    let statusDiv = $("#Status3");
                    statusDiv.removeClass("text-success text-danger text-warning text-dark"); // old classes remove
                    statusDiv.text(statusText);

                    if (statusText === "Approved") {
                        statusDiv.addClass("text-success");
                    }
                    else if (statusText === "Rejected") {
                        statusDiv.addClass("text-danger");
                    }
                    else if (statusText === "Pending") {
                        statusDiv.addClass("text-warning");
                    }
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error, xhr.responseText);
            }
        });

        // Destroy if already initialized
        if ($.fn.DataTable.isDataTable('#ViewItems3')) {
            $('#ViewItems3').DataTable().clear().destroy();
        }

        // Second Ajax: Load Items into DataTable
        $('#ViewItems3').DataTable({
            responsive: true,
            paging: true,
            searching: true,
            ordering: true,
            info: true,
            lengthChange: true,
            pageLength: 10,

            ajax: {
                url: '/Purchase/ItemPartialSP',
                type: "POST",
                data: { id: prCode },
                dataSrc: function (json) {
                    console.log("Items loaded:", json);
                    return json.success ? json.data : [];
                },
                error: function (xhr, error, thrown) {
                    console.error("AJAX error:", error, thrown, xhr.responseText);
                }
            },

            columns: [
                {
                    data: null, orderable: false, searchable: false,
                    render: function (data, type, row, meta) {
                        return meta.row + 1;
                    }
                },
                { data: "ItemCode", title: "ITEM CODE" },
                { data: "ItemName", title: "ITEM NAME" },
                { data: "Description", title: "DESCRIPTION" },
                { data: "RequiredQuantity", title: "QTY" },
                {
                    data: "UnitRate",
                    title: "UNIT RATE",
                    render: function (data, type, row) {
                        if (!data) return "₹ 0.00";
                        return "₹ " + parseFloat(data).toLocaleString("en-IN", {
                            minimumFractionDigits: 2,
                            maximumFractionDigits: 2
                        });
                    }
                },
                {
                    data: "Amount",
                    title: "AMOUNT",
                    render: function (data, type, row) {
                        if (!data) return "₹ 0.00";
                        return "₹ " + parseFloat(data).toLocaleString("en-IN", {
                            minimumFractionDigits: 2,
                            maximumFractionDigits: 2
                        });
                    }
                }
            ],

            ordering: false,
            dom: '<"d-flex justify-content-between align-items-center mb-2"Bf>rt<"d-flex justify-content-between align-items-center mt-2"ip>',

            buttons: [
                {
                    extend: 'print',
                    text: '<i class="bi bi-printer-fill text-dark fs-5"></i>',
                    title: '',
                    customize: function (win) {
                        // Info (DetailsPartialSP values)
                        let prCode = $("#PRCODE3").text();
                        let reqDate = $("#RequiredDate3").text();
                        let fullName = $("#FullName3").text();
                        let status = $("#Status3").text();

                        // Custom Header HTML
                        let headerHtml = `
        <h2 class="text-center mb-2">Purchase Requisition Details</h2>
        <div style="text-align:center; margin-bottom:10px; font-size:11pt; font-style:italic;">
            Generated on: ${moment().format("YYYY-MM-DD")}
        </div>
        <table class="table table-borderless mb-3">
            <tr>
                <td><b>PR CODE :</b> ${prCode}</td>
                <td><b>Required Date :</b> ${reqDate}</td>
            </tr>
            <tr>
                <td><b>Created By :</b> ${fullName}</td>
                <td><b>Status :</b> ${status}</td>
            </tr>
        </table>
    `;

                        // Prepend info section
                        $(win.document.body).prepend(headerHtml);

                        // DataTable table formatting
                        let table = $(win.document.body).find('table.dataTable');

                        // Apply borders forcefully using !important
                        table.css('border-collapse', 'collapse');
                        table.find('thead th, tbody td').each(function () {
                            $(this).css({
                                'border': '1px solid #000',
                                'padding': '5px',
                                'border-collapse': 'collapse'
                            });
                        });

                        // Header styling
                        table.find('thead').css('background-color', '#343a40').css('color', '#fff');
                    }
                }
            ],
            language: {
                lengthMenu: ""
            }
        });
    });


    // ===================== Update Modal Loader =====================
    $(document).on("click", ".update-btn3", function () {
        var prCode = $(this).data("id");
        loadUpdateModal3(prCode);
    });
    // Reinitialize tooltips after DataTable draw
    $(document).on('mouseenter', '[title]', function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'))
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    });

    // Load Update Modal Function
    function loadUpdateModal3(prCode) {
        // Load PR Info
        $.ajax({
            url: '/Purchase/DetailsPartialSP',
            type: 'POST',
            data: { id: prCode },
            success: function (response) {
                if (response.success) {
                    var formattedDate = moment(response.data.RequiredDate3).format("DD/MM/YYYY");

                    $("#PRCODE3").text(response.data.PRCode);
                    $("#RequiredDate3").text(formattedDate);
                    $("#FullName3").text(response.data.FullName);
                    $("#Status3").text(response.data.Status);

                    let statusText = response.data.Status;
                    let statusDiv = $("#Status3");
                    statusDiv.removeClass("text-success text-danger text-warning text-dark"); // old classes remove
                    statusDiv.text(statusText);

                    if (statusText === "Approved") {
                        statusDiv.addClass("text-success");
                    }
                    else if (statusText === "Rejected") {
                        statusDiv.addClass("text-danger");
                    }
                    else if (statusText === "Pending") {
                        statusDiv.addClass("text-warning");
                    }

                    console.log(response.data);
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error, xhr.responseText);
            }
        });

        // Load Item Details (Editable)
        $.ajax({
            url: '/Purchase/ItemPartialSP',
            type: 'POST',
            data: { id: prCode },
            success: function (response) {
                if (response.success) {
                    $("#ItemTableBodyUpdate3").empty(); // Clear old rows

                    $.each(response.data, function (i, item) {
                        var row = `
                        <tr data-id="${item.PRItemId}">
                            <td>${i + 1}</td>
                            <td>${item.ItemCode}</td>
                            <td>${item.ItemName}</td>
                            <td>${item.Description}</td>
                            <td>
                                <input type="number" class="form-control qty-input"
                                    value="${item.RequiredQuantity}" min="1" />
                            </td>
                            <td>₹ ${parseFloat(item.UnitRate).toLocaleString("en-IN", { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>
                            <td>₹ ${parseFloat(item.Amount).toLocaleString("en-IN", { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>
                            <td>
                                <button class="btn btn-sm btn-success save-item-btn3">Save</button>
                            </td>
                        </tr>`;
                        $("#ItemTableBodyUpdate3").append(row);
                    });
                    // Initialize DataTable or re-initialize safely
                    $("#ItemTableUpdate3").DataTable({
                        ordering: false,
                        paging: true,
                        searching: true,
                        info: true,
                        destroy: true  // Important to allow re-initialization
                    });
                }
            },
            error: function (xhr, status, error) {
                console.error("Error loading item details:", error);
            }
        });
    }

    // ===================== Save Item Quantity =====================
    $(document).on("click", ".save-item-btn3", function () {
        var row = $(this).closest("tr");
        var prItemId = row.data("id");
        var requiredQuantity = row.find(".qty-input").val();

        $.ajax({
            url: '/Purchase/UpdateItemQuantitySP',
            type: 'POST',
            data: { PRItemId: prItemId, requiredQuantity: requiredQuantity },
            success: function (response) {
                if (response.success) {
                    // SweetAlert2 success popup
                    Swal.fire({
                        title: 'Success!',
                        text: 'Item updated successfully!',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        // Close the Update Modal after SweetAlert
                        $('#updateapproeModal').modal('hide');
                    });
                } else {
                    // SweetAlert2 error popup if backend returns failure
                    Swal.fire({
                        title: 'Error!',
                        text: response.message || 'Failed to update item.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            },
            error: function () {
                // SweetAlert2 error popup for AJAX errors
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong while updating the item.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    });
</script>
