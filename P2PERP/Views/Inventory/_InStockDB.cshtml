@model P2PLibray.Inventory.GRNdetailsDRB


<style>
    .modal-header {
        border-bottom: 2px solid rgba(255,255,255,0.2);
    }

    .card {
        border-radius: 0.5rem;
    }

    .card-header {
        border-bottom: 1px solid rgba(0,0,0,0.05);
    }

    .table th {
        border-top: none;
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .table td {
        vertical-align: middle;
        padding: 0.75rem;
    }

    .form-control, .form-select {
        border-radius: 0.375rem;
        transition: all 0.2s ease;
    }

        .form-control:focus, .form-select:focus {
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.15);
            border-color: #86b7fe;
        }

    .badge {
        font-size: 0.75rem;
        padding: 0.35em 0.65em;
    }

    .progress {
        border-radius: 1rem;
    }

    .btn {
        border-radius: 0.375rem;
        font-weight: 500;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .modal-body {
            padding: 1rem;
        }

        .table-responsive {
            font-size: 0.875rem;
        }

        .card-body .row.g-0 > .col-md-6 {
            border-right: none !important;
            border-bottom: 1px solid #dee2e6;
        }

            .card-body .row.g-0 > .col-md-6:last-child {
                border-bottom: none;
            }
    }
</style>

<div class="modal fade" id="InStockModal" tabindex="-1" aria-labelledby="grnModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content shadow-lg rounded-3">

            <!-- Header -->
            <div class="modal-header bg-primary text-white justify-content-center position-relative py-3">
                <h5 class="modal-title fw-bold text-white text-center m-0 fs-4" id="grnModalLabel">
                    <i class="bi bi-box-seam me-2"></i>In-Stocks Management
                </h5>
                <button type="button" class="btn-close btn-close-white position-absolute end-0 me-3" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Body -->
            <div class="modal-body p-4">
                <form id="grnForm" class="needs-validation" novalidate>

                    <!-- GRN / Invoice Details - Enhanced Card Layout -->
                    <div class="card shadow-sm border-0 mb-4">

                        <div class="card-body p-0">
                            <div class="row g-0">
                                <!-- Left Column -->
                                <div class="col-md-6 p-3 border-end">
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">GRN No</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0 fw-semibold" name="GRNCode" value="@Model.GRNCode" readonly />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">GRN Date</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0" value="@Model.GRNDate.ToString("dd/MM/yyyy")" readonly />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">PO Reference</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0" name="POReference" value="@Model.POReference" readonly />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">Invoice No</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0" name="InvoiceCode" value="@Model.InvoiceCode" readonly />
                                        </div>
                                    </div>
                                    <div class="row">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">Vendor Code</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0" name="VendorCode" value="@Model.VendorCode" readonly />
                                        </div>
                                    </div>
                                </div>

                                <!-- Right Column -->
                                <div class="col-md-6 p-3">
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">PO Contact Info</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0" name="POContactInfo" value="@Model.ContactNo" readonly />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">Invoice Date</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0" name="InvoiceDate" value="@Model.InvoiceDate" readonly />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">Vendor Name</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0" name="VendorName" value="@Model.VendorName" readonly />
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">Store ID</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0" name="StorId" value="@Model.WareHouseCode" readonly />
                                        </div>
                                    </div>
                                    <div class="row">
                                        <label class="col-sm-4 col-form-label fw-bold text-muted small">Warehouse Name</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control bg-light border-0" name="WareHouseName" value="@Model.WarehouseName" readonly />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Item Allocation Table - Enhanced -->
                    <div class="card shadow-sm border-0">

                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-hover align-middle mb-0 instockTable">
                                    <thead class="table-primary">
                                        <tr>
                                            <th class="text-center">SR.No</th>
                                            <th>Item Code</th>
                                            <th>Item Name</th>
                                            <th>Type</th>
                                            <th class="text-center">UOM</th>
                                            <th class="text-center">Qty</th>
                                            <th class="text-center">Stored</th>
                                            <th class="text-center" style="width: 40%">Storage Allocation</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.Items.Count; i++)
                                        {
                                            var item = Model.Items[i];
                                            bool isComplete = item.Quantity == item.QuantityStored;
                                            decimal progressPercent = item.Quantity > 0 ? (item.QuantityStored / item.Quantity) * 100 : 0;

                                            <tr class="@(isComplete ? "table-success" : "")">
                                                <td class="text-center fw-bold">@(i + 1)</td>
                                                <td>
                                                    <span class="fw-semibold text-dark">@item.ItemCode</span>
                                                    <input type="hidden" class="grnitemcode" value="@item.ItemCode" />
                                                </td>
                                                <td>@item.ItemName</td>
                                                <td>
                                                    <span class="badge bg-secondary">@item.ItemCategoryName</span>
                                                </td>
                                                <td class="text-center">
                                                    <span class="badge bg-light text-dark border">@item.UOMName</span>
                                                </td>
                                                <td class="text-center fw-semibold">@item.Quantity</td>
                                                <td class="text-center">
                                                    <div class="d-flex flex-column align-items-center">
                                                        <span class="fw-semibold @(isComplete ? "text-success" : "text-primary")">@item.QuantityStored</span>
                                                        @if (!isComplete)
                                                        {
                                                            <div class="progress mt-1" style="height: 5px; width: 60px;">
                                                                <div class="progress-bar @(progressPercent == 100 ? "bg-success" : "bg-warning")"
                                                                     role="progressbar" style="width: @progressPercent;"
                                                                     aria-valuenow="@progressPercent" aria-valuemin="0" aria-valuemax="100"></div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-success mt-1">Complete</span>
                                                        }
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="p-3 bg-light rounded">
                                                        <!-- Storage Location Selectors -->
                                                        <div class="row g-2 mb-3">
                                                            <div class="col-sm-6 col-lg-3">
                                                                <label class="form-label small fw-semibold text-muted">Area</label>
                                                                <select class="form-select form-select-sm area-ddl" @(isComplete ? "disabled" : "")>
                                                                    <option value="">Select Area</option>
                                                                </select>
                                                            </div>
                                                            <div class="col-sm-6 col-lg-3">
                                                                <label class="form-label small fw-semibold text-muted">Rack</label>
                                                                <select class="form-select form-select-sm rack-ddl" @(isComplete ? "disabled" : "")>
                                                                    <option value="">Select Rack</option>
                                                                </select>
                                                            </div>
                                                            <div class="col-sm-6 col-lg-3">
                                                                <label class="form-label small fw-semibold text-muted">Row</label>
                                                                <select class="form-select form-select-sm row-ddl" @(isComplete ? "disabled" : "")>
                                                                    <option value="">Select Row</option>
                                                                </select>
                                                            </div>
                                                            <div class="col-sm-6 col-lg-3">
                                                                <label class="form-label small fw-semibold text-muted">Bin</label>
                                                                <select class="form-select form-select-sm bin-ddl" @(isComplete ? "disabled" : "")>
                                                                    <option value="">Select Bin</option>
                                                                </select>
                                                            </div>
                                                        </div>

                                                        <!-- Capacity Information & Quantity Input -->
                                                        <div class="d-flex justify-content-between align-items-center flex-wrap gap-2">
                                                            <div class="d-flex flex-wrap gap-2">
                                                                <span class="badge bg-info">
                                                                    <i class="bi bi-box me-1"></i>Current: <span class="current-items">0</span>
                                                                </span>
                                                                <span class="badge bg-warning text-dark">
                                                                    <i class="bi bi-arrow-up me-1"></i>Max: <span class="max-capacity">0</span>
                                                                </span>
                                                                <span class="badge bg-success">
                                                                    <i class="bi bi-check-circle me-1"></i>Remaining: <span class="remaining">0</span>
                                                                </span>
                                                            </div>
                                                            <div class="d-flex align-items-center gap-2">
                                                                <label class="form-label small fw-semibold text-muted mb-0">Assign Qty:</label>
                                                                <input type="number" class="form-control form-control-sm assign-qty" style="width: 150px;" min="0" font-size="14px"; placeholder="Enter quantity" @(isComplete ? "disabled" : "") />
                                                            </div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <!-- Footer Buttons -->
                    <div class="d-flex justify-content-end gap-3 mt-4 pt-3 border-top">

                        <button type="button" class="btn btn-success px-4 btnAssign">
                            <i class="bi bi-check-circle me-2"></i>Assign Bin
                        </button>
                    </div>

                </form>
            </div>

        </div>
    </div>
</div>






<script>
$(document).ready(function () {

    // Ensure DataTable initialized only once
    if (!$.fn.DataTable.isDataTable('.instockTable')) {
        $('.instockTable').DataTable({
            destroy: true,
            responsive: true,
            searching: false,
            ordering: false,
            paging: false,
            info: false,
            columnDefs: [{ targets: "_all", className: "text-center align-middle" }]
        });
    }

   
    const warehouseCode = '@Model.WareHouseCode';
    if (!warehouseCode) return;

    $.ajax({
        url: '@Url.Action("GetSectionDRB", "Inventory")',
        type: 'GET',
        data: { code: warehouseCode },
        success: function (data) {
            console.log("Sections reloaded:", data);
            $(".area-ddl").each(function () {
                const $area = $(this);
                $area.empty().append($('<option/>').val("").text("-- Select Area --"));
                $.each(data, function (i, section) {
                    $area.append($('<option/>').val(section.SectionCode).text(section.SectionName));
                });
            });
        }
    });



    // Clear dependent dropdowns before repopulating
    function resetDropdowns($row) {
        $row.find(".rack-ddl, .row-ddl, .bin-ddl").each(function () {
            $(this).empty().append($('<option/>').val("").text(""));
        });
    }

    // Area → Rack
    $(document).off("change", ".area-ddl").on("change", ".area-ddl", function () {
        const sectionCode = $(this).val();
        const $row = $(this).closest("tr");
        const $rack = $row.find(".rack-ddl");
        resetDropdowns($row);

        if (sectionCode) {
            $.ajax({
                url: '@Url.Action("GetRackDRB", "Inventory")',
                type: 'GET',
                data: { Sectioncode: sectionCode },
                success: function (data) {
                    console.log("Racks:", data);
                    $rack.append($('<option/>').val("").text("-- Select Rack --"));
                    $.each(data, function (i, rack) {
                        if ($rack.find(`option[value='${rack.RackCode}']`).length === 0) { // No duplicates
                            $rack.append($('<option/>').val(rack.RackCode).text(rack.RackName));
                        }
                    });
                }
            });
        }
    });

    // Rack → Row
    $(document).off("change", ".rack-ddl").on("change", ".rack-ddl", function () {
        const rackCode = $(this).val();
        const $row = $(this).closest("tr");
        const $rowddl = $row.find(".row-ddl");
        const $bin = $row.find(".bin-ddl");
        $rowddl.empty().append($('<option/>').val("").text("-- Select Row --"));
        $bin.empty().append($('<option/>').val("").text("-- Select Bin --"));

        if (rackCode) {
            $.ajax({
                url: '@Url.Action("GetRowDRB", "Inventory")',
                type: 'GET',
                data: { Rackcode: rackCode },
                success: function (data) {
                    console.log("Rows:", data);
                    $.each(data, function (i, rw) {
                        if ($rowddl.find(`option[value='${rw.RowCode}']`).length === 0) { // Prevent duplicates
                            $rowddl.append($('<option/>').val(rw.RowCode).text(rw.RowName));
                        }
                    });
                }
            });
        }
    });

    // Row → Bin
    $(document).off("change", ".row-ddl").on("change", ".row-ddl", function () {
        const rowCode = $(this).val();
        const $row = $(this).closest("tr");
        const grnItemCode = $row.find(".grnitemcode").val();
        const $bin = $row.find(".bin-ddl");
        $bin.empty().append($('<option/>').val("").text("-- Select Bin --"));

        if (rowCode) {
            $.ajax({
                url: '@Url.Action("GetBinDRB", "Inventory")',
                type: 'GET',
                dataType: 'json',
                data: { RowCode: rowCode, GRNItemCode: grnItemCode },
                success: function (data) {
                    console.log("Bins:", data);
                    $.each(data, function (i, bin) {
                        if ($bin.find(`option[value='${bin.BinCode}']`).length === 0) { // Prevent duplicates
                            $bin.append(
                                $('<option/>')
                                    .val(bin.BinCode)
                                    .text(bin.BinName)
                                    .attr("data-max", bin.MaxQuantity)
                                    .attr("data-current", bin.CurrentItems)
                            );
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Error loading bins:", error);
                }
            });
        }
    });

    // Bin capacity update
    $(document).off("change", ".bin-ddl").on("change", ".bin-ddl", function () {
        const $bin = $(this);
        const $row = $bin.closest("tr");
        const selected = $bin.find(":selected");
        const max = selected.data("max") || 0;
        const current = selected.data("current") || 0;

        $row.find(".current-items").text(current);
        $row.find(".max-capacity").text(max);
        $row.find(".assign-qty").val(0);
        $row.find(".remaining").text(max - current);
    });

    // Assign quantity update
    $(document).off("input", ".assign-qty").on("input", ".assign-qty", function () {
        const $input = $(this);
        const $row = $input.closest("tr");
        const assignQty = parseInt($input.val()) || 0;
        const current = parseInt($row.find(".current-items").text()) || 0;
        const max = parseInt($row.find(".max-capacity").text()) || 0;
        let remaining = max - (current + assignQty);

        if (remaining < 0) {
            toastr.warning("Bin Capacity Exceeded...!");
            $input.val(0);
            remaining = max - current;
        }

        $row.find(".remaining").text(remaining);
    });

    // Save Assignments
    $(".btnAssign").off("click").on("click", function () {
        const assignments = [];

        $(".instockTable tbody tr").each(function () {
            const grnItemCode = $(this).find(".grnitemcode").val();
            const binCode = $(this).find(".bin-ddl").val();
            const assignQty = parseInt($(this).find(".assign-qty").val()) || 0;

            if (binCode && assignQty > 0) {
                assignments.push({
                    GRNItemCode: grnItemCode,
                    BinCode: binCode,
                    QuantityStored: assignQty,
                    CreatedDate: new Date().toISOString()
                });
            }
        });

        if (assignments.length === 0) {
            Swal.fire({ icon: 'warning', title: 'No Items', text: 'No items assigned to bins!', confirmButtonText: 'OK' });
            return;
        }

        $.ajax({
            url: '@Url.Action("SaveItemBinAssignmentDRB", "Inventory")',
            type: 'POST',
            contentType: "application/json",
            data: JSON.stringify(assignments),
            success: function () {
                Swal.fire({
                    icon: 'success',
                    title: 'Assignment Saved',
                    text: 'Bin assignment saved successfully!',
                    timer: 2000,
                    showConfirmButton: false
                }).then(() => location.reload());
            },
            error: function () {
                Swal.fire({ icon: 'error', title: 'Error', text: 'Something went wrong while saving bin assignments!' });
            }
        });
    });


    // Disable row if fully stored
    $(".instockTable tbody tr").each(function () {
        var qty = parseInt($(this).find("td:eq(5)").text()) || 0;
        var stored = parseInt($(this).find("td:eq(6)").text()) || 0;

        if (qty === stored) {
            $(this).addClass("table-secondary");
            $(this).find("select, input").prop("disabled", true);
        }
    });
});
</script>
